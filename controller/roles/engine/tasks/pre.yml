---
- name: include provider defaults
  include_vars: 
    file: /data/vars/defaults/provider-{{ platform.provider.name }}.yaml
    hash_behaviour: merge

- name: include provider type defaults
  include_vars: 
    file: /data/vars/defaults/provider-{{ platform.provider.name }}-{{ platform.provider.type }}.yaml
    hash_behaviour: merge

- name: include ins defaults
  include_vars: 
    file: /data/vars/defaults/ins-{{ ins.type }}.yaml
    hash_behaviour: merge

- name: include engine defaults
  include_vars:
    file: /data/vars/defaults/engine-{{ engine.type }}.yaml
    hash_behaviour: merge

- name: set workspace folder
  set_fact:
    workspace: '/data/repo'
  when: workspace is not defined

- name: get engine type
  set_fact:
    engine_type: "{{ engine.type }}"
  when: engine_type is not defined

- name: get provider name
  set_fact:
    provider_name: "{{ platform.provider.name }}"
  when: provider_name is not defined

- name: get provider type
  set_fact:
    provider_type: "{{ platform.provider.type }}"
  when: provider_type is not defined

- name: get provider region
  set_fact:
    engine_region: "{{ platform.provider.region1 }}"

- name: get provider auth id 
  set_fact:
    provider_auth_id: "{{ vars['platform']['provider']['auth']['id'] }}"
  when:  vars['platform']['provider']['auth']['type']=='id'

- name: get provider auth key 
  set_fact:
    provider_auth_key: "{{ vars['platform']['provider']['auth']['key'] }}"
  when:  vars['platform']['provider']['auth']['type']=='id'

- name: set remote_user
  set_fact:
    remote_user: "{{ vars['img']['auth']['user'] }}"

- name: set runner type
  set_fact:
    engine_runner_type: "{{ vars['engine']['runner']['type'] }}"

- name: set pem path
  set_fact:
    engine_pem_path: "/data/sensitive/{{ vars['platform']['name'] }}-{{ vars['platform']['environment'] }}-key.pem"
  when: engine_pem_path is not defined

- name: include engine executor defaults
  include_vars:
    file: /data/manifests/executor/{{ engine.type }}-{{ vars['engine'][engine_type]['version']}}.yaml
    hash_behaviour: merge
  when: vars['engine'][engine_type]['version'] is defined and engine_runner_type == 'executor'

- name: include engine executor defaults
  include_vars:
    file: /data/manifests/executor/{{ engine.type }}-{{ vars['engine'][engine_type]['branch']}}.yaml
    hash_behaviour: merge
  when: vars['engine'][engine_type]['branch'] is defined and vars['engine']['runner']['type'] == 'executor'

- name: check ssh key exists on jump
  stat: 
    path: "/tmp/{{ vars['platform']['name'] }}-{{ vars['platform']['environment'] }}-key.pem"
  register: id_file

- name: copy pem to jump
  become: true 
  copy:
    src: "/data/sensitive/{{ vars['platform']['name'] }}-{{ vars['platform']['environment'] }}-key.pem"
    dest: "/tmp/{{ vars['platform']['name'] }}-{{ vars['platform']['environment'] }}-key.pem"
  when: id_file.stat.exists == False

- name: check jump ssh key  exists
  stat: 
    path: ~/.ssh/id_rsa
  register: jump_id_file

- name: create jump ssh key 
  openssh_keypair:
    path: "~/.ssh/id_rsa"
    regenerate: never
  when: jump_id_file.stat.exists == False

- name: authorize jump ssh key to worker instances
  shell: "scp -i /tmp/{{ vars['platform']['name'] }}-{{ vars['platform']['environment'] }}-key.pem -o StrictHostKeyChecking=no ~/.ssh/id_rsa.pub {{ vars['img']['auth']['user'] }}@{{ item }}:/tmp/id_rsa.pub; ssh -i /tmp/{{ vars['platform']['name'] }}-{{ vars['platform']['environment'] }}-key.pem -o StrictHostKeyChecking=no {{ vars['img']['auth']['user'] }}@{{ item }} 'cat /tmp/id_rsa.pub >> ~/.ssh/authorized_keys'"
  with_items:  "{{ vars['ins']['worker']['net']['ip']['private']['pool'] }}"
  when:  vars['ins']['worker']['net']['ip']['private']['pool'] != ''

- name: authorize jump ssh key to master instances
  shell: "scp -i /tmp/{{ vars['platform']['name'] }}-{{ vars['platform']['environment'] }}-key.pem -o StrictHostKeyChecking=no ~/.ssh/id_rsa.pub {{ vars['img']['auth']['user'] }}@{{ item }}:/tmp/id_rsa.pub; ssh -i /tmp/{{ vars['platform']['name'] }}-{{ vars['platform']['environment'] }}-key.pem -o StrictHostKeyChecking=no {{ vars['img']['auth']['user'] }}@{{ item }} 'cat /tmp/id_rsa.pub >> ~/.ssh/authorized_keys'"
  with_items:  "{{ vars['ins']['master']['net']['ip']['private']['pool'] }}"