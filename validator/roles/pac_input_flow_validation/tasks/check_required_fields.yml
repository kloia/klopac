---
# 1. Required Field Checks

# 1.1. Image Layer
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Include image vars
  include_vars: /data/vars/image.yaml

- name: [VALIDATOR - REQUIRED FIELD VALIDATION]Check required fields for image layer
  assert:
    that:
      - img.{{ item }} is defined
      - img.{{ item }} != None
      - img.{{ item }} != ""
    quiet: yes
    fail_msg: "img.{{ item }} must be defined"
  with_items: "{{ img.required }}"
  when: img.enabled == true


# 1.2. Engine Layer
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Include engine vars
  include_vars: /data/vars/engine.yaml

- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for engine layer
  assert:
    that:
      - engine.{{ item }} is defined
      - engine.{{ item }} != None
      - engine.{{ item }} != ""
    quiet: yes
    fail_msg: "engine.{{ item }} must be defined"
  with_items: "{{ engine.required }}"
  when: engine.enabled == true

# 1.3. Instance Layer
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Include instance vars
  include_vars: /data/vars/instance.yaml
  
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for instance layer
  assert:
    that:
      - ins.{{ item }} is defined
      - ins.{{ item }} != None
      - ins.{{ item }} != ""
    quiet: yes
    fail_msg: "ins.{{ item }} must be defined"
  with_items: "{{ ins.required }}"
  when: ins.enabled == true

# 1.4. Platform Layer
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Include platform vars
  include_vars: /data/vars/platform.yaml

- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for platform
  assert:
    that:
      - platform.{{ item }} is defined
      - platform.{{ item }} != None
      - platform.{{ item }} != ""
    quiet: yes
    fail_msg: "platform.{{ item }} must be defined"
  with_items: "{{ platform.required }}"
  when: platform.enabled == true

# 1.5. Gitops Layer
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Include gitops vars
  include_vars: /data/vars/gitops.yaml

- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for gitops layer
  assert:
    that:
      - gitops.{{ item }} is defined
      - gitops.{{ item }} != None
      - gitops.{{ item }} != ""
    quiet: yes
    fail_msg: "gitops.{{ item }} must be defined"
  with_items: "{{ gitops.required }}"
  when: gitops.enabled == true

# 1.6 Integration Layer
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Include integration vars
  include_vars: /data/vars/integrations.yaml

- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for integration layer
  assert:
    that:
      - int.{{ item }} is defined
      - int.{{ item }} != None
      - int.{{ item }} != ""
    quiet: yes
    fail_msg: "int.{{ item }} must be defined"
  with_items: "{{ int.required }}"
  when: int.enabled == true

# 1.6.1 Cert Manager
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for cert manager
  assert:
    that:
      - int.certManager.{{ item }} is defined
      - int.certManager.{{ item }} != None
      - int.certManager.{{ item }} != ""
    quiet: yes
    fail_msg: "int.certManager.{{ item }} must be defined"
  with_items: "{{ int.certManager.required }}"
  when: int.enabled == true and int.certManager.enabled == true

# 1.6.2 Cluster Autoscaler
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for cluster autoscaler
  assert:
    that:
      - int.clusterAutoscaler.{{ item }} is defined
      - int.clusterAutoscaler.{{ item }} != None
      - int.clusterAutoscaler.{{ item }} != ""
    quiet: yes
    fail_msg: "int.clusterAutoscaler.{{ item }} must be defined"
  with_items: "{{ int.clusterAutoscaler.required }}"
  when: int.enabled == true and int.clusterAutoscaler.enabled == true

# 1.6.3 CPI
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for cpi
  assert:
    that:
      - int.cpi.{{ item }} is defined
      - int.cpi.{{ item }} != None
      - int.cpi.{{ item }} != ""
    quiet: yes
    fail_msg: "int.cpi.{{ item }} must be defined"
  with_items: "{{ int.cpi.required }}"
  when: int.enabled == true and int.cpi.enabled == true

# 1.6.4 CSI
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for csi
  assert:
    that:
      - int.csi.{{ item }} is defined
      - int.csi.{{ item }} != None
      - int.csi.{{ item }} != ""
    quiet: yes
    fail_msg: "int.csi.{{ item }} must be defined"
  with_items: "{{ int.csi.required }}"
  when: int.enabled == true and int.csi.enabled == true

# 1.6.5 Ingress
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for ingress
  assert:
    that:
      - int.ingress.{{ item }} is defined
      - int.ingress.{{ item }} != None
      - int.ingress.{{ item }} != ""
    quiet: yes
    fail_msg: "int.ingress.{{ item }} must be defined"
  with_items: "{{ int.ingress.required }}"
  when: int.enabled == true and int.ingress.enabled == true

# 1.6.6 Logging
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for logging
  assert:
    that:
      - int.logging.{{ item }} is defined
      - int.logging.{{ item }} != None
      - int.logging.{{ item }} != ""
    quiet: yes
    fail_msg: "int.logging.{{ item }} must be defined"
  with_items: "{{ int.logging.required }}"
  when: int.enabled == true and int.logging.enabled == true

# 1.6.7 Monitoring
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for monitoring
  assert:
    that:
      - int.monitoring.{{ item }} is defined
      - int.monitoring.{{ item }} != None
      - int.monitoring.{{ item }} != ""
    quiet: yes
    fail_msg: "int.monitoring.{{ item }} must be defined"
  with_items: "{{ int.monitoring.required }}"
  when: int.enabled == true and int.monitoring.enabled == true

# 1.6.8 Vault
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for vault
  assert:
    that:
      - int.vault.{{ item }} is defined
      - int.vault.{{ item }} != None
      - int.vault.{{ item }} != ""
    quiet: yes
    fail_msg: "int.vault.{{ item }} must be defined"
  with_items: "{{ int.vault.required }}"
  when: int.enabled == true and int.vault.enabled == true

# 1.7 Applications Layer
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Include applications vars
  include_vars: /data/vars/applications.yaml

# 1.7.1 Example
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for example
  assert:
    that:
      - app.example.{{ item }} is defined
      - app.example.{{ item }} != None
      - app.example.{{ item }} != ""
    quiet: yes
    fail_msg: "app.example.{{ item }} must be defined"
  with_items: "{{ app.example.required }}"
  when: app.example.enabled == true

# 1.7.2 Instana
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for instana
  assert:
    that:
      - app.instana.{{ item }} is defined
      - app.instana.{{ item }} != None
      - app.instana.{{ item }} != ""
    quiet: yes
    fail_msg: "app.instana.{{ item }} must be defined"
  with_items: "{{ app.instana.required }}"
  when: app.instana.enabled == true

# 1.7.3 Sock Shop
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for sock shop
  assert:
    that:
      - app.sock_shop.{{ item }} is defined
      - app.sock_shop.{{ item }} != None
      - app.sock_shop.{{ item }} != ""
    quiet: yes
    fail_msg: "app.sock_shop.{{ item }} must be defined"
  with_items: "{{ app.sock_shop.required }}"
  when: app.sock_shop.enabled == true

# 1.7.1 Test
- name: [VALIDATOR - REQUIRED FIELD VALIDATION] Check required fields for test
  assert:
    that:
      - app.test.{{ item }} is defined
      - app.test.{{ item }} != None
      - app.test.{{ item }} != ""
    quiet: yes
    fail_msg: "app.test.{{ item }} must be defined"
  with_items: "{{ app.test.required }}"
  when: app.test.enabled == true
