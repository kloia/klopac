---

- name: "[VALIDATOR - REPO VALIDATION] Include engine vars"
  include_vars: /data/vars/engine.yaml

- name: "[VALIDATOR - RUNNER VALIDATION] Include default vars"
  include_vars: 
    file: /data/vars/defaults/engine-{{engine.type}}.yaml
    hash_behaviour: merge

- name: "[VALIDATOR - REPO VALIDATION] Get default engine version"
  set_fact:
    engine_version: "{{hostvars['localhost']['engine'][engine.type]['version']}}"

- name: "[VALIDATOR - REPO VALIDATION] Check if repo manifest file exists"
  ansible.builtin.stat:
    path: "/data/manifests/repo/{{ engine.type }}-{{engine_version}}.yaml"
  register: repo_manifest_exists

- name: "[VALIDATOR - REPO VALIDATION] Assertion of repo manifest file existence"
  assert:
    that:
      - repo_manifest_exists.stat.exists == true
    fail_msg: "Repo manifest file does not exist in 'manifests/repo' folder"
    success_msg: "Repo manifest file is exist"

- name: "[VALIDATOR - REPO VALIDATION] include_manifest_file"
  include_vars: /data/manifests/repo/{{ engine.type }}-{{engine_version}}.yaml
  
- name: "[VALIDATOR - REPO VALIDATION] Check if the repo directory exists"
  ansible.builtin.stat:
    path: "/data/repos/{{ engine.type }}"
  register: repo_dir_exists

- name: "[VALIDATOR - REPO VALIDATION] Assertion of repo directory existence"
  assert:
    that:
      - repo_dir_exists.stat.exists == true
    fail_msg: "Repo does not exist in 'repos' folder"
    success_msg: "Repo is exist"

- name: Check if terraform engine 
  include: terraform_state_validation.yml
  when: engine.type == 'terraform' and platform.repo.terraform.state.enabled == true
