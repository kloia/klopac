---
# TODO: Extract clone and copy tasks as subtasks
- name: Create repo names list
  set_fact:
    repo_names: "{{ repo_names | default([]) + [vars['platform']['repo'][item]['uri'] | split('/') | last | split('.') | first ] }}"
  with_items: 
    - "{{ vars['platform']['repo'].keys() | list }}"
- name: Make sure the mandatory uri value is defined
  fail:
    msg: "Repository URI is a mandatory value to execute the playbook."
  when: vars['platform']['repo'][item]['uri'] == ""
  loop: "{{ vars['platform']['repo'].keys() | list }}"
  loop_control: 
    index_var: index
- name: Clone repos with type "repo"
  ansible.builtin.git:
    repo: "{{ vars['platform']['repo'][item]['uri'] }}"
    dest: "/data/repo/{{ repo_names[index] }}"
    version: "{{ vars['platform']['repo'][item]['branch'] }}"
  loop: "{{ vars['platform']['repo'].keys() | list }}"
  loop_control: 
    index_var: index
  when: vars['platform']['repo'][item]['branch'] | default("") | length > 0
- name: Clone repos with type "repo"
  ansible.builtin.git:
    repo: "{{ vars['platform']['repo'][item]['uri'] }}"
    dest: "/data/repo/{{ repo_names[index] }}"
    version: "{{ vars['platform']['repo'][item]['tag'] }}"
  loop: "{{ vars['platform']['repo'].keys() | list }}"
  loop_control: 
    index_var: index
  when: 
    - vars['platform']['repo'][item]['tag'] | default("") | length > 0
    - vars['platform']['repo'][item]['branch'] | default("") | length == 0
# - name: Copy states with type "repo"
#   copy:
#     src: "/data/bundle/{{ vars['platform']['repo'][item]['state']['file']['path'] }}"
#     dest: "/data/repo/{{ repo_names[index] }}/"
#     mode: u+rw,g-wx,o-rwx
#   loop: "{{ vars['platform']['repo'].keys() | list }}"
#   loop_control: 
#     index_var: index
#   when: vars['platform']['repo'][item]['state']['enabled'] == true 